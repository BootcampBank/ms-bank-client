openapi: 3.0.1
info:
  title: Bank - Client Management
  description: Client Management Microservice. API reactive
  termsOfService: http://swagger.io/terms/
  contact:
    name: Leonardo Anccana Muñoz
    email: lanccana@nttdata.com
  version: 1.0.0
externalDocs:
  description: Local Server
  url: http://localhost:8091
servers:
  - url: http://localhost:8091
    description: Local server
tags:
  - name: client
    description: Everything about Clients
paths:
  /clients:
    get:
      tags:
        - client
      summary: Retrieve all clients
      operationId: getAllClients
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Clients"
    post:
      tags:
        - client
      summary: Crear un nuevo cliente
      operationId: saveClient
      requestBody:
        description: Datos del nuevo cliente
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Client"
      responses:
        '201':
          description: Cliente creado correctamente
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Client"
    put:
      tags:
        - client
      summary: Update client
      description: Update a single client
      operationId: updateClient
      requestBody:
        description: Datos actualizados del cliente
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Client"
      responses:
        '200':
          description: Información del cliente actualizada correctamente
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Client"
  /clients/{clientId}:
    parameters:
      - name: clientId
        in: path
        description: ID of client to return
        required: true
        schema:
          type: string
    get:
      tags:
        - client
      summary: Find client by ID
      description: Returns a single client
      operationId: getClientById
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Client"
        '400':
          description: Invalid ID supplied
        '404':
          description: Client not found whit that ID
    delete:
      tags:
        - client
      summary: Delete a client
      operationId: deleteClient
      responses:
        '204':
          description: Successfully deleted client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Client"
components:
  schemas:
    Clients:
      type: array
      items:
        $ref: "#/components/schemas/Client"
    Client:
      type: object
      properties:
        id:
          type: string
          description: Client ID
        documentType:
          type: string
          description: Tipo de documento (DNI, RUC)
        documentNumber:
          type: string
          description: Número de documento
        name:
          type: string
          description: Client name
        lastName:
          type: string
          description: Client last name
        businessName:
          type: string
          description: Client business name
        clientType:
          type: string
          description: Client type (personal o empresarial)
        clientProfile:
          type: string
          description: Client Profile (regular, vip o pyme)